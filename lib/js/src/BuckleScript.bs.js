// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Logger = require("./Logger.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

function with_extension(ext, name) {
  var x = Belt_List.head(List.rev($$Array.to_list(name.split("."))));
  if (x !== undefined) {
    return ext === x;
  } else {
    return false;
  }
}

function $$package(name, src_dir, lib_dir) {
  var cmtis = List.filter((function (param) {
            return with_extension("cmti", param);
          }))($$Array.to_list(Fs.readdirSync(lib_dir)));
  if (cmtis) {
    var cmti_count = List.length(cmtis);
    Logger.debug("Found " + (String(cmti_count) + (" .cmti files in " + (String(lib_dir) + ": "))));
    List.iter((function (x) {
            return Logger.debug("  - " + (String(x) + " "));
          }), cmtis);
  } else {
    Logger.debug("Could not find .cmti files in " + (String(lib_dir) + " ðŸ™€\n\nThis usually means you have no Reason/OCaml sources, that you have not compiled\nyour project, or that I\'m looking for .cmti files in the wrong place.\n\n"));
  }
  var mlds = List.filter((function (param) {
            return with_extension("mld", param);
          }))($$Array.to_list(Fs.readdirSync(src_dir)));
  if (mlds) {
    var mld_count = List.length(mlds);
    Logger.debug("Found " + (String(mld_count) + (" .mld files in " + (String(lib_dir) + ""))));
    List.iter((function (x) {
            return Logger.debug("  - " + (String(x) + " "));
          }), mlds);
  } else {
    Logger.debug("Could not find any .mld files in " + (String(lib_dir) + " ðŸ™€"));
  }
  return /* record */[
          /* name */name,
          /* cmtis */cmtis,
          /* mlds */mlds
        ];
}

exports.with_extension = with_extension;
exports.$$package = $$package;
/* fs Not a pure module */
