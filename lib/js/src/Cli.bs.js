// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var BsDoc = require("./BsDoc.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Common = require("./Common.bs.js");
var Logger = require("./Logger.bs.js");
var Cmdliner = require("@elliottcable/bs-cmdliner/lib/js/src/cmdliner.bs.js");

function setup_logger(debug, verbosity) {
  Logger.verbosity[0] = verbosity;
  var verb_str = Common.verbosity_string(verbosity);
  Logger.debug("Set verbosity to " + (String(verb_str) + ""));
  return /* record */[
          /* debug */debug,
          /* verbosity */verbosity
        ];
}

var help_000 = /* `S */[
  83,
  Cmdliner.Manpage[/* s_common_options */7]
];

var help_001 = /* :: */[
  /* `P */[
    80,
    "These options are common to all commands."
  ],
  /* :: */[
    /* `S */[
      83,
      "MORE HELP"
    ],
    /* :: */[
      /* `P */[
        80,
        "Use `$(mname) $(i,COMMAND) --help' for help on a single command."
      ],
      /* :: */[
        /* Noblank */-1038541997,
        /* :: */[
          /* `S */[
            83,
            Cmdliner.Manpage[/* s_bugs */12]
          ],
          /* :: */[
            /* `P */[
              80,
              "Check bug reports at https://github.com/ostera/bsdoc."
            ],
            /* [] */0
          ]
        ]
      ]
    ]
  ]
];

var help = /* :: */[
  help_000,
  help_001
];

var docs = Cmdliner.Manpage[/* s_common_options */7];

var debug = Cmdliner.Arg[/* & */9](Cmdliner.Arg[/* value */20], Cmdliner.Arg[/* & */9](Cmdliner.Arg[/* flag */10], Cmdliner.Arg[/* info */8](docs, undefined, "Give only debug output.", undefined, /* :: */[
              "debug",
              /* [] */0
            ])));

var quiet_001 = Cmdliner.Arg[/* info */8](docs, undefined, "Suppress informational output.", undefined, /* :: */[
      "q",
      /* :: */[
        "quiet",
        /* [] */0
      ]
    ]);

var quiet = /* tuple */[
  /* Quiet */1,
  quiet_001
];

var verbose_001 = Cmdliner.Arg[/* info */8](docs, undefined, "Give verbose output.", undefined, /* :: */[
      "v",
      /* :: */[
        "verbose",
        /* [] */0
      ]
    ]);

var verbose = /* tuple */[
  /* Verbose */2,
  verbose_001
];

var verb = Cmdliner.Arg[/* & */9](Cmdliner.Arg[/* last */23], Cmdliner.Arg[/* vflag_all */13](/* :: */[
          /* Normal */0,
          /* [] */0
        ], /* :: */[
          quiet,
          /* :: */[
            verbose,
            /* [] */0
          ]
        ]));

var flags = Cmdliner.Term[/* $ */3](Cmdliner.Term[/* $ */3](Cmdliner.Term[/* const */0](setup_logger), debug), verb);

var SharedOpts = /* module */[
  /* setup_logger */setup_logger,
  /* help */help,
  /* flags */flags
];

var partial_arg = Cmdliner.Arg[/* file */34];

var partial_arg$1 = Cmdliner.Arg[/* opt */14];

var outdir = Cmdliner.Arg[/* & */9](Cmdliner.Arg[/* value */20], Cmdliner.Arg[/* & */9]((function (param) {
            return partial_arg$1(undefined, partial_arg, "./docs", param);
          }), Cmdliner.Arg[/* info */8](undefined, "DIR", "Output directory of the generated documentation", undefined, /* :: */[
              "o",
              /* :: */[
                "output-dir",
                /* [] */0
              ]
            ])));

var exits = Cmdliner.Term[/* default_exits */11];

var man_000 = /* `S */[
  83,
  Cmdliner.Manpage[/* s_description */3]
];

var man_001 = /* :: */[
  /* `P */[
    80,
    "Copies the support files for the generated documentation. This\nincludes a default stylesheet that can be further customized later on and a small\namount of Javascript to support syntax highlightning."
  ],
  /* :: */[
    /* `Blocks */[
      -595680602,
      help
    ],
    /* [] */0
  ]
];

var man = /* :: */[
  man_000,
  man_001
];

var cmd_000 = Cmdliner.Term[/* $ */3](Cmdliner.Term[/* $ */3](Cmdliner.Term[/* const */0](BsDoc.build), flags), outdir);

var cmd_001 = Curry.app(Cmdliner.Term[/* info */14], [
      undefined,
      man,
      undefined,
      exits,
      Cmdliner.Manpage[/* s_common_options */7],
      undefined,
      "Copy the support files (e.g. default theme, JavaScript files) to the output directory.",
      undefined,
      "support-files"
    ]);

var cmd = /* tuple */[
  cmd_000,
  cmd_001
];

var SupportFiles = /* module */[/* cmd */cmd];

var partial_arg$2 = Cmdliner.Arg[/* file */34];

var partial_arg$3 = Cmdliner.Arg[/* opt */14];

var outdir$1 = Cmdliner.Arg[/* & */9](Cmdliner.Arg[/* value */20], Cmdliner.Arg[/* & */9]((function (param) {
            return partial_arg$3(undefined, partial_arg$2, "./docs", param);
          }), Cmdliner.Arg[/* info */8](undefined, "OUTDIR", "Output directory of the generated documentation", undefined, /* :: */[
              "o",
              /* :: */[
                "outdir",
                /* [] */0
              ]
            ])));

var exits$1 = Cmdliner.Term[/* default_exits */11];

var man_000$1 = /* `S */[
  83,
  Cmdliner.Manpage[/* s_description */3]
];

var man_001$1 = /* :: */[
  /* `P */[
    80,
    "Generates documentation for a BuckleScript project by orchestrating a\nglobal odoc installation."
  ],
  /* :: */[
    /* `Blocks */[
      -595680602,
      help
    ],
    /* [] */0
  ]
];

var man$1 = /* :: */[
  man_000$1,
  man_001$1
];

var cmd_000$1 = Cmdliner.Term[/* $ */3](Cmdliner.Term[/* $ */3](Cmdliner.Term[/* const */0](BsDoc.build), flags), outdir$1);

var cmd_001$1 = Curry.app(Cmdliner.Term[/* info */14], [
      undefined,
      man$1,
      undefined,
      exits$1,
      Cmdliner.Manpage[/* s_common_options */7],
      undefined,
      "generate documentation for a BuckleScript project",
      undefined,
      "build"
    ]);

var cmd$1 = /* tuple */[
  cmd_000$1,
  cmd_001$1
];

var Build = /* module */[/* cmd */cmd$1];

var sdocs = Cmdliner.Manpage[/* s_common_options */7];

var exits$2 = Cmdliner.Term[/* default_exits */11];

var default_cmd_000 = Cmdliner.Term[/* ret */5](Cmdliner.Term[/* $ */3](Cmdliner.Term[/* const */0]((function (param) {
                return /* `Help */[
                        803495649,
                        /* tuple */[
                          /* Pager */-797271261,
                          undefined
                        ]
                      ];
              })), flags));

var default_cmd_001 = Curry.app(Cmdliner.Term[/* info */14], [
      undefined,
      help,
      undefined,
      exits$2,
      sdocs,
      undefined,
      "Documentation Generator for BuckleScript projects.",
      "v0.1.0",
      "bsdoc"
    ]);

var default_cmd = /* tuple */[
  default_cmd_000,
  default_cmd_001
];

var cmds_001 = /* :: */[
  cmd,
  /* [] */0
];

var cmds = /* :: */[
  cmd$1,
  cmds_001
];

function run(param) {
  ((process.argv.shift()));
  var eta = Cmdliner.Term[/* eval_choice */17](undefined, undefined, undefined, undefined, undefined, default_cmd, cmds);
  return Cmdliner.Term[/* exit */24](undefined, eta);
}

exports.SharedOpts = SharedOpts;
exports.SupportFiles = SupportFiles;
exports.Build = Build;
exports.default_cmd = default_cmd;
exports.cmds = cmds;
exports.run = run;
/* debug Not a pure module */
